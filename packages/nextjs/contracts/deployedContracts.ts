/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    PrimusAttestor: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_primusAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "primusAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "recipient",
                  type: "address",
                },
                {
                  components: [
                    {
                      internalType: "string",
                      name: "url",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "header",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "method",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "body",
                      type: "string",
                    },
                  ],
                  internalType: "struct AttNetworkRequest",
                  name: "request",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "string",
                      name: "keyName",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "parseType",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "parsePath",
                      type: "string",
                    },
                  ],
                  internalType: "struct AttNetworkResponseResolve[]",
                  name: "reponseResolve",
                  type: "tuple[]",
                },
                {
                  internalType: "string",
                  name: "data",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "attConditions",
                  type: "string",
                },
                {
                  internalType: "uint64",
                  name: "timestamp",
                  type: "uint64",
                },
                {
                  internalType: "string",
                  name: "additionParams",
                  type: "string",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "attestorAddr",
                      type: "address",
                    },
                    {
                      internalType: "string",
                      name: "url",
                      type: "string",
                    },
                  ],
                  internalType: "struct Attestor[]",
                  name: "attestors",
                  type: "tuple[]",
                },
                {
                  internalType: "bytes[]",
                  name: "signatures",
                  type: "bytes[]",
                },
              ],
              internalType: "struct Attestation",
              name: "attestation",
              type: "tuple",
            },
          ],
          name: "verifyAttestation",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    ReclaimAttestor: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "reclaimAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "string",
                      name: "provider",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "parameters",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "context",
                      type: "string",
                    },
                  ],
                  internalType: "struct Claims.ClaimInfo",
                  name: "claimInfo",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      components: [
                        {
                          internalType: "bytes32",
                          name: "identifier",
                          type: "bytes32",
                        },
                        {
                          internalType: "address",
                          name: "owner",
                          type: "address",
                        },
                        {
                          internalType: "uint32",
                          name: "timestampS",
                          type: "uint32",
                        },
                        {
                          internalType: "uint32",
                          name: "epoch",
                          type: "uint32",
                        },
                      ],
                      internalType: "struct Claims.CompleteClaimData",
                      name: "claim",
                      type: "tuple",
                    },
                    {
                      internalType: "bytes[]",
                      name: "signatures",
                      type: "bytes[]",
                    },
                  ],
                  internalType: "struct Claims.SignedClaim",
                  name: "signedClaim",
                  type: "tuple",
                },
              ],
              internalType: "struct Reclaim.Proof",
              name: "proof",
              type: "tuple",
            },
          ],
          name: "verifyProof",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YourContract: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
    ZkPassVerifier: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "_allocator",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "taskId",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "schemaId",
                  type: "bytes32",
                },
                {
                  internalType: "address",
                  name: "validator",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "allocatorSignature",
                  type: "bytes",
                },
              ],
              internalType: "struct Proof",
              name: "proof",
              type: "tuple",
            },
          ],
          name: "verify",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
